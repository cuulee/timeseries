[buildout]
index = http://packages.lizardsystem.nl
find-links = http://packages.lizardsystem.nl/coverage-3.4a1.tar.gz
unzip = true
prefer-final = true
versions = versions
extensions = buildout.dumppickedversions
parts =
#    sysegg
    test
    omelette
    console_scripts
    pyflakes
    sphinx
develop = .
#         local_checkouts/some_trunk_external
eggs =
    timeseries


[versions]
# Specific pins
timeseries =
# Reported by buildout.dumppickedversions
Jinja2 = 2.5.5
Pygments = 1.4
Sphinx = 1.0.7
collective.recipe.omelette = 0.10
collective.recipe.sphinxbuilder = 0.7.0
coverage = 3.4
docutils = 0.7
eazysvn = 1.12.1
nose = 1.0.0
pbp.recipe.noserunner = 0.2.6
pep8 = 0.6.1
pkginfo = 0.8
pyflakes = 0.4.0
zest.releaser = 3.20


# [sysegg]
# # Add eggs here that are best handled through OS-level packages.
# recipe = osc.recipe.sysegg
# force-sysegg = true
# eggs =


[test]
recipe = pbp.recipe.noserunner
eggs =
    timeseries
    timeseries[test]
defaults =
    --with-doctest
    --doctest-extension txt
    --doctest-fixtures _fixt
    --with-xunit
    timeseries


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    ${buildout:eggs}
# Development tools
    eazysvn
    coverage > 3.3.1
    pep8
    zest.releaser


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'


[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/doc/source
build = ${buildout:directory}/doc/build
eggs = ${buildout:eggs}
